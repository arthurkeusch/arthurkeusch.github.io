<div id="piechart_assistants"></div>

<script>
    let width = 928;
    let height = 600;
    let data_piechart_assistants = {{ data|json_encode|raw }};


    /**
     * Ajoute un graphique en secteur pour les assistants en fonction des donnÃ©es fournies.
     */
    function addPieChartAssistants() {
        const height = Math.min(width, 500);
        const radius = Math.min(width, height) / 2;

        const arc = d3.arc()
            .innerRadius(radius * 0.67)
            .outerRadius(radius - 1);

        const pie = d3.pie()
            .padAngle(1 / radius)
            .sort(null)
            .value(d => d.value);

        const color = d3.scaleOrdinal()
            .domain(data_piechart_assistants.map(d => d.name))
            .range(d3.quantize(t => d3.interpolateSpectral(t * 0.8 + 0.1), data_piechart_assistants.length).reverse());

        const svg = d3.create("svg")
            .attr("width", width)
            .attr("height", height)
            .attr("viewBox", [-width / 2, -height / 2, width, height])
            .attr("style", "max-width: 100%; height: auto;");

        svg.append("g")
            .selectAll()
            .data(pie(data_piechart_assistants))
            .join("path")
            .attr("fill", d => color(d.data.name))
            .attr("d", arc)
            .append("title")
            .text(d => `${d.data.value.toLocaleString()}`);

        const textGroup = svg.append("g")
            .attr("font-family", "sans-serif")
            .attr("font-size", 12)
            .attr("text-anchor", "middle")
            .selectAll("g")
            .data(pie(data_piechart_assistants))
            .join("g")
            .attr("transform", d => `translate(${arc.centroid(d)})`);

        textGroup.append("rect")
            .attr("x", d => -getTextWidth(wrapText(d.data.name)) / 2 - 8)
            .attr("y", -16)
            .attr("width", d => getTextWidth(wrapText(d.data.name)) + 16)
            .attr("height", 16)
            .attr("fill", "white");

        textGroup.append("text")
            .call(text => text.append("tspan")
                .attr("y", "-0.4em")
                .attr("font-weight", "bold")
                .text(d => wrapText(d.data.name)));

        function wrapText(name) {
            return name.split(":")[1].trim();
        }

        function getTextWidth(text) {
            const context = document.createElement("canvas").getContext("2d");
            context.font = "12px sans-serif";
            return context.measureText(text).width;
        }

        return svg.node();
    }

    document.getElementById("piechart_assistants").appendChild(addPieChartAssistants());
</script>