<!DOCTYPE html>
<html lang="fr">

<head>
    <meta charset="UTF-8">
    <title>{{ title }}</title>
    <link rel="icon" href="/images/images_roles/assistant.png" type="image/png">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet"
          integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"
            integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz"
            crossorigin="anonymous"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.9.0/styles/default.min.css">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.9.0/highlight.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.9.0/languages/go.min.js"></script>
    <script>hljs.highlightAll();</script>
</head>

<body>

<nav class="navbar navbar-expand-sm navbar-dark bg-dark fixed-top">
    <div class="container-fluid">

        <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarsExample04"
                aria-controls="navbarsExample04" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
        </button>

        <div class="collapse navbar-collapse" id="navbarsExample04">
            <ul class="navbar-nav me-auto mb-2 mb-md-0">
                <li class="nav-item">
                    <a class="nav-link active" href="/">Accueil</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link active" href="/tool">Outils</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link active" href="/assistants">Assistants</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link active" href="/backup">Backup</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link active" href="/parameters">Paramètres</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link active" href="/statistics">Statistiques</a>
                </li>
            </ul>
        </div>


        <div class="btn-group" id="download_dropdown" style="display: none;"
             data-bs-toggle="popup-tip" title="Télécharger les données des logs au format CSV ou JSON.">
            <button type="button" class="btn btn-secondary dropdown-toggle" data-bs-toggle="dropdown"
                    data-bs-display="static" aria-expanded="false">
                <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="white" class="bi bi-download"
                     viewBox="0 0 16 16">
                    <path d="M.5 9.9a.5.5 0 0 1 .5.5v2.5a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1v-2.5a.5.5 0 0 1 1 0v2.5a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2v-2.5a.5.5 0 0 1 .5-.5"/>
                    <path d="M7.646 11.854a.5.5 0 0 0 .708 0l3-3a.5.5 0 0 0-.708-.708L8.5 10.293V1.5a.5.5 0 0 0-1 0v8.793L5.354 8.146a.5.5 0 1 0-.708.708z"/>
                </svg>
            </button>
            <ul class="dropdown-menu dropdown-menu-end">
                <li class="d-flex justify-content-around">
                    <svg xmlns="http://www.w3.org/2000/svg" width="30" height="30" fill="black"
                         class="bi bi-filetype-csv" viewBox="0 0 16 16" style="cursor: pointer;"
                         id="download_csv" onclick="download('csv')"
                    >
                        <path fill-rule="evenodd"
                              d="M14 4.5V14a2 2 0 0 1-2 2h-1v-1h1a1 1 0 0 0 1-1V4.5h-2A1.5 1.5 0 0 1 9.5 3V1H4a1 1 0 0 0-1 1v9H2V2a2 2 0 0 1 2-2h5.5zM3.517 14.841a1.13 1.13 0 0 0 .401.823q.195.162.478.252.284.091.665.091.507 0 .859-.158.354-.158.539-.44.187-.284.187-.656 0-.336-.134-.56a1 1 0 0 0-.375-.357 2 2 0 0 0-.566-.21l-.621-.144a1 1 0 0 1-.404-.176.37.37 0 0 1-.144-.299q0-.234.185-.384.188-.152.512-.152.214 0 .37.068a.6.6 0 0 1 .246.181.56.56 0 0 1 .12.258h.75a1.1 1.1 0 0 0-.2-.566 1.2 1.2 0 0 0-.5-.41 1.8 1.8 0 0 0-.78-.152q-.439 0-.776.15-.337.149-.527.421-.19.273-.19.639 0 .302.122.524.124.223.352.367.228.143.539.213l.618.144q.31.073.463.193a.39.39 0 0 1 .152.326.5.5 0 0 1-.085.29.56.56 0 0 1-.255.193q-.167.07-.413.07-.175 0-.32-.04a.8.8 0 0 1-.248-.115.58.58 0 0 1-.255-.384zM.806 13.693q0-.373.102-.633a.87.87 0 0 1 .302-.399.8.8 0 0 1 .475-.137q.225 0 .398.097a.7.7 0 0 1 .272.26.85.85 0 0 1 .12.381h.765v-.072a1.33 1.33 0 0 0-.466-.964 1.4 1.4 0 0 0-.489-.272 1.8 1.8 0 0 0-.606-.097q-.534 0-.911.223-.375.222-.572.632-.195.41-.196.979v.498q0 .568.193.976.197.407.572.626.375.217.914.217.439 0 .785-.164t.55-.454a1.27 1.27 0 0 0 .226-.674v-.076h-.764a.8.8 0 0 1-.118.363.7.7 0 0 1-.272.25.9.9 0 0 1-.401.087.85.85 0 0 1-.478-.132.83.83 0 0 1-.299-.392 1.7 1.7 0 0 1-.102-.627zm8.239 2.238h-.953l-1.338-3.999h.917l.896 3.138h.038l.888-3.138h.879z"/>
                    </svg>

                    <svg xmlns="http://www.w3.org/2000/svg" width="30" height="30" fill="black"
                         class="bi bi-filetype-json" viewBox="0 0 16 16" style="cursor: pointer;"
                         id="download_json" onclick="download('json')"
                    >
                        <path fill-rule="evenodd"
                              d="M14 4.5V11h-1V4.5h-2A1.5 1.5 0 0 1 9.5 3V1H4a1 1 0 0 0-1 1v9H2V2a2 2 0 0 1 2-2h5.5zM4.151 15.29a1.2 1.2 0 0 1-.111-.449h.764a.58.58 0 0 0 .255.384q.105.073.25.114.142.041.319.041.245 0 .413-.07a.56.56 0 0 0 .255-.193.5.5 0 0 0 .084-.29.39.39 0 0 0-.152-.326q-.152-.12-.463-.193l-.618-.143a1.7 1.7 0 0 1-.539-.214 1 1 0 0 1-.352-.367 1.1 1.1 0 0 1-.123-.524q0-.366.19-.639.192-.272.528-.422.337-.15.777-.149.456 0 .779.152.326.153.5.41.18.255.2.566h-.75a.56.56 0 0 0-.12-.258.6.6 0 0 0-.246-.181.9.9 0 0 0-.37-.068q-.324 0-.512.152a.47.47 0 0 0-.185.384q0 .18.144.3a1 1 0 0 0 .404.175l.621.143q.326.075.566.211a1 1 0 0 1 .375.358q.135.222.135.56 0 .37-.188.656a1.2 1.2 0 0 1-.539.439q-.351.158-.858.158-.381 0-.665-.09a1.4 1.4 0 0 1-.478-.252 1.1 1.1 0 0 1-.29-.375m-3.104-.033a1.3 1.3 0 0 1-.082-.466h.764a.6.6 0 0 0 .074.27.5.5 0 0 0 .454.246q.285 0 .422-.164.137-.165.137-.466v-2.745h.791v2.725q0 .66-.357 1.005-.355.345-.985.345a1.6 1.6 0 0 1-.568-.094 1.15 1.15 0 0 1-.407-.266 1.1 1.1 0 0 1-.243-.39m9.091-1.585v.522q0 .384-.117.641a.86.86 0 0 1-.322.387.9.9 0 0 1-.47.126.9.9 0 0 1-.47-.126.87.87 0 0 1-.32-.387 1.55 1.55 0 0 1-.117-.641v-.522q0-.386.117-.641a.87.87 0 0 1 .32-.387.87.87 0 0 1 .47-.129q.265 0 .47.129a.86.86 0 0 1 .322.387q.117.255.117.641m.803.519v-.513q0-.565-.205-.973a1.46 1.46 0 0 0-.59-.63q-.38-.22-.916-.22-.534 0-.92.22a1.44 1.44 0 0 0-.589.628q-.205.407-.205.975v.513q0 .562.205.973.205.407.589.626.386.217.92.217.536 0 .917-.217.384-.22.589-.626.204-.41.205-.973m1.29-.935v2.675h-.746v-3.999h.662l1.752 2.66h.032v-2.66h.75v4h-.656l-1.761-2.676z"/>
                    </svg>
                </li>
            </ul>
        </div>
    </div>
</nav>

<br><br>

<div id="messageCard" role="alert"
     style="display: none; justify-content: space-between; align-items: center; margin: 10px;">
    <span id="messageText">Message</span>
    <span>
        <svg xmlns="http://www.w3.org/2000/svg" width="32" height="32" fill="currentColor" class="bi bi-x-circle"
             viewBox="0 0 16 16" style="cursor: pointer" onclick="close_message()">
            <path d="M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14m0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16"/>
            <path d="M4.646 4.646a.5.5 0 0 1 .708 0L8 7.293l2.646-2.647a.5.5 0 0 1 .708.708L8.707 8l2.647 2.646a.5.5 0 0 1-.708.708L8 8.707l-2.646 2.647a.5.5 0 0 1-.708-.708L7.293 8 4.646 5.354a.5.5 0 0 1 0-.708"/>
        </svg>
    </span>
</div>

<div class="modal position-fixed" id="modalDiv">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="modalTitle">TITRE</h5>
                <button type="button"
                        class="btn-close"
                        data-bs-dismiss="modal"
                        aria-label="Close"
                        onclick="closeModal()"
                >
                </button>
            </div>
            <div class="modal-body">
                <p id="modalBody">
                    BODY
                </p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" id="confirm">Confirmer</button>
                <button type="button" class="btn btn-secondary" id="cancel">Annuler</button>
            </div>
        </div>
    </div>
</div>


</body>
</html>

<script>
    function postRequest(path, params) {
        return new Promise((resolve, reject) => {
            const xhr = new XMLHttpRequest();
            xhr.open("POST", path, true);
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.onload = function () {
                if (xhr.status >= 200 && xhr.status < 300) {
                    resolve(xhr.responseText);
                } else {
                    reject(xhr.statusText);
                }
            };
            xhr.onerror = function () {
                reject(xhr.statusText);
            };
            xhr.send(JSON.stringify(params));
        });
    }

    function getRequest(path, params) {
        return new Promise((resolve, reject) => {
            const xhr = new XMLHttpRequest();
            const pathWithParams = `${path}/${Object.values(params).join("/")}`;
            xhr.open("GET", pathWithParams, true);
            xhr.setRequestHeader("Content-Type", "application/json");
            xhr.onload = function () {
                if (xhr.status >= 200 && xhr.status < 300) {
                    resolve(xhr.responseText);
                } else {
                    reject(xhr.statusText);
                }
            };
            xhr.onerror = function () {
                reject(xhr.statusText);
            };
            xhr.send();
        });
    }

    function show_success_message(message) {
        document.getElementById("messageText").textContent = message;
        document.getElementById("messageCard").style.display = "flex";
        document.getElementById("messageCard").className = "alert alert-success";
    }

    function show_warning_message(message) {
        document.getElementById("messageText").textContent = message;
        document.getElementById("messageCard").style.display = "flex";
        document.getElementById("messageCard").className = "alert alert-warning";
    }

    function show_danger_message(message) {
        document.getElementById("messageText").textContent = message;
        document.getElementById("messageCard").style.display = "flex";
        document.getElementById("messageCard").className = "alert alert-danger";
    }

    function close_message() {
        document.getElementById("messageCard").style.display = "none";
    }

    function openModal() {
        document.getElementById('modalDiv').classList.add("d-block");
    }

    function closeModal() {
        document.getElementById('modalDiv').classList.remove("d-block");
    }

    function download(type) {
        let listId = [];
        if (typeof logs !== 'undefined' && logs !== null) {
            for (const id in logs) {
                let input = document.getElementById("checkbox_log_" + logs[id]['id_log']);
                if (document.getElementById("log_" + logs[id]['id_log']).style.display !== "none" && input.checked) {
                    listId.push(logs[id]['id_log']);
                }
            }
            if (listId.length > 0) {
                postRequest("/download/log", {type: (type === "csv") ? "csv" : "json", listId: listId})
                    .then(response => {
                        createFile(response, "logs-" + getCurrentDateTime() + "." + type);
                        show_success_message("Téléchargement réussi ! Regardez dans vos téléchargements");
                    })
                    .catch(error => {
                        show_danger_message("Le téléchargement a échoué : " + error);
                    });
                return;
            } else {
                show_danger_message("Le téléchargement a échoué : Aucun log n'a été sélectionné.");
            }
        }
        if (typeof threads !== 'undefined' && threads !== null) {
            for (const id in threads) {
                let input = document.getElementById("checkbox_thread_" + threads[id]['id_thread']);
                if (document.getElementById("thread_" + threads[id]['id_thread']).style.display !== "none" && input.checked) {
                    listId.push(threads[id]['id_thread']);
                }
            }
            if (listId.length > 0) {
                postRequest("/download/thread", {type: (type === "csv") ? "csv" : "json", listId: listId})
                    .then(response => {
                        createFile(response, "threads-" + getCurrentDateTime() + "." + type);
                        show_success_message("Téléchargement réussi ! Regardez dans vos téléchargements");
                    })
                    .catch(error => {
                        show_danger_message("Le téléchargement a échoué : " + error);
                    });
            } else {
                show_danger_message("Le téléchargement a échoué : Aucun thread n'a été sélectionné.");
            }
        }
        if (typeof backups !== 'undefined' && backups !== null) {
            for (const id in backups) {
                let input = document.getElementById("checkbox_backup_" + backups[id]['id_backup']);
                if (document.getElementById("backup_" + backups[id]['id_backup']).style.display !== "none" && input.checked) {
                    listId.push(backups[id]['id_backup']);
                }
            }
            if (listId.length > 0) {
                postRequest("/download/backup", {type: (type === "csv") ? "csv" : "json", listId: listId})
                    .then(response => {
                        createFile(response, "backups_" + getCurrentDateTime() + "." + type);
                        show_success_message("Téléchargement réussi ! Regardez dans vos téléchargements");
                    })
                    .catch(error => {
                        show_danger_message("Le téléchargement a échoué : " + error);
                    });
            } else {
                show_danger_message("Le téléchargement a échoué : Aucun backup n'a été sélectionné.");
            }
        }
    }

    function createFile(content, filename) {
        const blob = new Blob([content], {type: 'application/octet-stream'});
        const url = URL.createObjectURL(blob);
        const link = document.createElement('a');
        link.href = url;
        link.download = filename;
        link.click();
        URL.revokeObjectURL(url);
    }

    function getCurrentDateTime() {
        const now = new Date();
        const year = now.getFullYear();
        const month = String(now.getMonth() + 1).padStart(2, '0');
        const day = String(now.getDate()).padStart(2, '0');
        const hours = String(now.getHours()).padStart(2, '0');
        const minutes = String(now.getMinutes()).padStart(2, '0');
        const seconds = String(now.getSeconds()).padStart(2, '0');
        return `${year}_${month}_${day}-${hours}_${minutes}_${seconds}`;
    }

    function sleep(ms) {
        return new Promise(resolve => setTimeout(resolve, ms));
    }

    document.addEventListener('DOMContentLoaded', function () {
        const tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="popup-tip"]'));
        let timer;

        tooltipTriggerList.forEach(function (tooltipTriggerEl) {
            let tooltipInstance;

            tooltipTriggerEl.addEventListener('mouseover', function () {
                timer = setTimeout(function () {
                    tooltipInstance = new bootstrap.Tooltip(tooltipTriggerEl);
                    tooltipInstance.show();
                }, 500);
            });

            tooltipTriggerEl.addEventListener('mouseout', function () {
                clearTimeout(timer);
                if (tooltipInstance) {
                    tooltipInstance.hide();
                    setTimeout(() => {
                        if (tooltipInstance) {
                            tooltipInstance.dispose();
                            tooltipInstance = null;
                        }
                    }, 200);
                }
            });
        });
    });
</script>